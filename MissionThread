import json
import uuid
from orbitalPositionThread_test import orbitalPositionThread_test # Import the other class
import random
import numpy as np
import os
from Task import Task

class MissionThread:
    # Attributes 
    # IMAGEPATH = r"C:\Users\Phuon\OneDrive\Dokumenter\GitHub\CV-S-emulation\test"
    # files = os.listdir(IMAGEPATH)


    # def __init__(self, configPath):
    #     # Attributes
    #     self.configPath = configPath

    #     # Open and parse the JSON file
    #     with open(self.configPath, 'r') as file: 
    #         configData = json.load(file) 


    #     self.missions = configData.get("missions")

    # def run(self):
    #     # Create an instance of orbitalPositionThread_test
    #     orbital_thread = orbitalPositionThread_test()

    #     # Iterate through missions and call canExecuteMission
    #     for mission in self.missions:
    #         if (mission["satellite_id"] == uuid.getnode()) and orbital_thread.canExecuteMission(mission["satellite_id"], mission["orbit_number"]):
    #             self.__createTask()

    # def __createTask(self, location, timestamp, timeLimit):

    #     task = Task(
    #         taskID=uuid.getnode()+ random.getrandbits(1),
    #         fileName=imagePath,
    #         location=location,
    #         unixTimestamp=timestamp,
    #         unixTimeLimit=timeLimit,
    #         image=image
    #     )


# Pass the parsed dictionary to the constructor


# Example: Access the missions data
IMAGEPATH = r"C:\Users\Phuon\OneDrive\Dokumenter\GitHub\CV-S-emulation\test"
files = os.listdir(IMAGEPATH)
